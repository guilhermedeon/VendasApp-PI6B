// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VendasApp.Infra.Data;

#nullable disable

namespace VendasApp.Infra.Data.Migrations
{
    [DbContext(typeof(VendasAppContext))]
    [Migration("20231105173724_Update Cliente")]
    partial class UpdateCliente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VendasApp.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Documento")
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("Cliente_pkey");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("VendasApp.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Unidade")
                        .HasColumnType("text");

                    b.Property<string>("ValorUnitario")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("Item_pkey");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("VendasApp.Domain.Entities.ItemPedido", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("IdItem")
                        .HasColumnType("integer");

                    b.Property<int?>("IdPedido")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Quantidade")
                        .HasColumnType("numeric");

                    b.HasKey("Id")
                        .HasName("ItemPedido_pkey");

                    b.HasIndex("IdItem");

                    b.HasIndex("IdPedido");

                    b.ToTable("ItemPedido", (string)null);
                });

            modelBuilder.Entity("VendasApp.Domain.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<int?>("IdVendedor")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("Pedido_pkey");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdVendedor");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("VendasApp.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("Usuario_pkey");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("VendasApp.Domain.Entities.ItemPedido", b =>
                {
                    b.HasOne("VendasApp.Domain.Entities.Item", "IdItemNavigation")
                        .WithMany()
                        .HasForeignKey("IdItem")
                        .HasConstraintName("ItemId");

                    b.HasOne("VendasApp.Domain.Entities.Pedido", "IdPedidoNavigation")
                        .WithMany("ItensPedido")
                        .HasForeignKey("IdPedido")
                        .HasConstraintName("PedidoId");

                    b.Navigation("IdItemNavigation");

                    b.Navigation("IdPedidoNavigation");
                });

            modelBuilder.Entity("VendasApp.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("VendasApp.Domain.Entities.Cliente", "IdClienteNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("IdCliente");

                    b.HasOne("VendasApp.Domain.Entities.Usuario", "IdVendedorNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdVendedor")
                        .HasConstraintName("IdVendedor");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdVendedorNavigation");
                });

            modelBuilder.Entity("VendasApp.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("VendasApp.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("VendasApp.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
